*GAMS code of the case study developed by Camilo Mej√≠a-Moncayo for the article:
*"A Reconfigurable Cellular Remanufacturing Architecture: a multi-objective design approach"

set   i    workplaces / 1 * 10  /
      j    products / 1 *  10 /
      k    cell index  / 1 *  4 /
      l    version index /1 * 4 /
      p    period index /1 *  10 /
      b    dummy index /1 *  11 /;
 Alias(i,ip);
 Alias(j,jp);

 parameters
 tc(j)/
        1        71
        2        94
        3        102
        4        95
        5        101
        6        89
        7        142
        8        126
        9        75
        10       102

 /
 c(i)/  
        1        285000
        2        146000
        3        249300
        4        155600
        5        281100
        6        131200
        7        293800
        8        322100
        9        200400
        10       167700
 /
  top_min(j)/  
        1        80
        2        130
        3        111
        4        199
        5        125
        6        105
        7        212
        8        131
        9        106
        10       113
 /
  top_max(j)/  
        1        271
        2        353
        3        392
        4        328
        5        373
        6        346
        7        521
        8        469
        9        291
        10       395
 /
 ;
 scalar zmax The maximum value that can take Z / 10 /    
        Cg   Grouping cost / 0.56 /
        Cwb  Workload balancing cost / 1.13 /
        Cm   Makespan cost / 0.76 /
        alfa1 /1/
        alfa2 /1/
        alfa3 /1/
        alfa4 /1/
        alfa5 /1/
 ;
 table a(i,j,l) incidence matrix
        1       2       3       4
1.1     0       0       0       0
1.2     0       0       0       0
1.3     0       0       0       0
1.4     0       0       0       0
1.5     1       1       1       1
1.6     0       0       0       0
1.7     1       1       1       1
1.8     0       0       0       0
1.9     0       0       0       0
1.10    1       1       1       1
2.1     1       1       1       1
2.2     0       0       0       0
2.3     0       0       0       0
2.4     1       1       1       1
2.5     0       0       0       0
2.6     0       0       0       0
2.7     0       0       0       0
2.8     0       0       0       0
2.9     1       1       1       1
2.10    0       0       0       0
3.1     0       0       0       0
3.2     0       0       0       0
3.3     0       0       0       0
3.4     0       0       0       0
3.5     1       1       1       1
3.6     0       0       0       0
3.7     1       1       1       1
3.8     0       0       0       0
3.9     0       0       0       0
3.10    1       1       1       1
4.1     0       0       0       0
4.2     0       0       0       0
4.3     0       0       0       0
4.4     0       0       0       0
4.5     0       0       0       0
4.6     1       1       1       1
4.7     0       0       0       0
4.8     0       0       0       0
4.9     0       0       0       0
4.10    0       0       0       0
5.1     0       0       0       0
5.2     1       1       1       1
5.3     1       1       1       1
5.4     0       0       0       0
5.5     0       0       0       0
5.6     0       0       0       0
5.7     0       0       0       0
5.8     1       1       1       1
5.9     0       0       0       0
5.10    0       0       0       0
6.1     0       0       0       0
6.2     1       1       1       1
6.3     1       1       1       1
6.4     0       0       0       0
6.5     0       0       0       0
6.6     0       0       0       0
6.7     0       0       0       0
6.8     1       1       1       1
6.9     0       0       0       0
6.10    0       0       0       0
7.1     0       0       0       0
7.2     0       0       0       0
7.3     0       0       0       0
7.4     0       0       0       0
7.5     1       1       1       1
7.6     0       0       0       1
7.7     1       1       1       1
7.8     0       0       0       0
7.9     0       0       0       0
7.10    1       1       1       0
8.1     0       0       0       0
8.2     1       1       1       1
8.3     1       1       1       1
8.4     0       0       0       0
8.5     0       0       0       0
8.6     0       0       0       0
8.7     0       0       0       0
8.8     1       1       1       1
8.9     0       0       0       0
8.10    0       0       0       0
9.1     0       0       0       0
9.2     0       0       0       0
9.3     1       0       0       0
9.4     0       0       0       0
9.5     0       0       0       0
9.6     0       0       0       0
9.7     0       0       0       0
9.8     0       0       0       0
9.9     0       0       0       1
9.10    0       0       0       0
10.1    0       0       1       0
10.2    0       0       0       0
10.3    0       0       0       0
10.4    0       0       0       0
10.5    0       0       0       0
10.6    0       0       0       0
10.7    0       0       0       0
10.8    0       0       0       0
10.9    0       0       0       0
10.10   0       0       0       0

 ;
 
 table top(i,j,l) operation time of product j in machine i
        1       2       3       4
1.1     0       0       0       0
1.2     0       0       0       0
1.3     0       0       0       0
1.4     0       0       0       0
1.5     173     373     321     338
1.6     0       0       0       0
1.7     478     212     248     455
1.8     0       0       0       0
1.9     0       0       0       0
1.10    362     393     280     315
2.1     221     271     237     80
2.2     0       0       0       0
2.3     0       0       0       0
2.4     199     314     328     307
2.5     0       0       0       0
2.6     0       0       0       0
2.7     0       0       0       0
2.8     0       0       0       0
2.9     180     278     106     243
2.10    0       0       0       0
3.1     0       0       0       0
3.2     0       0       0       0
3.3     0       0       0       0
3.4     0       0       0       0
3.5     211     346     263     133
3.6     0       0       0       0
3.7     467     287     216     364
3.8     0       0       0       0
3.9     0       0       0       0
3.10    120     217     300     113
4.1     0       0       0       0
4.2     0       0       0       0
4.3     0       0       0       0
4.4     0       0       0       0
4.5     0       0       0       0
4.6     262     179     265     203
4.7     0       0       0       0
4.8     0       0       0       0
4.9     0       0       0       0
4.10    0       0       0       0
5.1     0       0       0       0
5.2     333     324     317     230
5.3     197     169     328     226
5.4     0       0       0       0
5.5     0       0       0       0
5.6     0       0       0       0
5.7     0       0       0       0
5.8     274     469     414     383
5.9     0       0       0       0
5.10    0       0       0       0
6.1     0       0       0       0
6.2     261     130     181     202
6.3     263     182     145     392
6.4     0       0       0       0
6.5     0       0       0       0
6.6     0       0       0       0
6.7     0       0       0       0
6.8     373     273     146     385
6.9     0       0       0       0
6.10    0       0       0       0
7.1     0       0       0       0
7.2     0       0       0       0
7.3     0       0       0       0
7.4     0       0       0       0
7.5     279     125     148     360
7.6     0       0       0       105
7.7     521     303     465     489
7.8     0       0       0       0
7.9     0       0       0       0
7.10    285     299     380     0
8.1     0       0       0       0
8.2     353     203     179     212
8.3     245     111     226     392
8.4     0       0       0       0
8.5     0       0       0       0
8.6     0       0       0       0
8.7     0       0       0       0
8.8     131     274     274     364
8.9     0       0       0       0
8.10    0       0       0       0
9.1     0       0       0       0
9.2     0       0       0       0
9.3     128     0       0       0
9.4     0       0       0       0
9.5     0       0       0       0
9.6     0       0       0       0
9.7     0       0       0       0
9.8     0       0       0       0
9.9     0       0       0       279
9.10    0       0       0       0
10.1    0       0       162     0
10.2    0       0       0       0
10.3    0       0       0       0
10.4    0       0       0       0
10.5    0       0       0       0
10.6    0       0       0       0
10.7    0       0       0       0
10.8    0       0       0       0
10.9    0       0       0       0
10.10   0       0       0       0


 ;
 table R(p,j,l) Return rate in period p of product j
           1          2          3           4
1.1        367        395        2076        1730
1.2        1394       1073       1782        1475
1.3        1252       1247       1123        935
1.4        0          1199       1508        657
1.5        758        424        293         400
1.6        284        364        244         2109
1.7        85         166        2207        1835
1.8        223        348        2099        298
1.9        683        783        1867        245
1.10       881        1645       2160        2222
2.1        330        454        2054        876
2.2        1153       1600       717         414
2.3        775        702        1194        2031
2.4        1313       1841       556         1011
2.5        678        548        1295        1957
2.6        220        516        2202        2473
2.7        218        206        1430        1558
2.8        115        219        2365        1422
2.9        710        1179       2125        367
2.10       824        2000       2495        1593
3.1        321        332        1645        72
3.2        1739       1375       1486        537
3.3        1288       584        1707        423
3.4        1786       1074       890         1385
3.5        535        380        1821        1864
3.6        370        356        2392        962
3.7        239        256        307         121
3.8        339        175        2301        669
3.9        1059       626        297         1713
3.10       965        460        2336        1813
4.1        38         0          1253        525
4.2        1742       35         878         303
4.3        1211       0          363         583
4.4        1721       8          1282        1212
4.5        686        0          924         1812
4.6        410        6          364         732
4.7        224        0          1235        137
4.8        211        8          2424        391
4.9        873        17         506         1210
4.10       1197       65         99          2461
5.1        620        267        524         880
5.2        1682       1577       1856        174
5.3        1475       815        2044        29
5.4        1658       486        347         1783
5.5        273        190        375         539
5.6        441        150        2341        2279
5.7        97         73         2353        871
5.8        240        148        186         1208
5.9        1066       691        186         1286
5.10       1106       1799       2397        2424
6.1        256        400        630         218
6.2        1503       1546       1244        577
6.3        933        897        1547        993
6.4        1643       1263       297         2347
6.5        455        333        706         2155
6.6        337        298        1729        943
6.7        78         133        1294        1899
6.8        170        174        2284        666
6.9        638        933        262         220
6.10       930        1765       793         2410
7.1        360        450        795         521
7.2        1827       1690       1716        2485
7.3        1286       966        2195        1653
7.4        1626       1671       153         887
7.5        833        416        697         548
7.6        442        307        1912        772
7.7        113        150        664         1018
7.8        253        165        1061        1110
7.9        1039       1013       2322        681
7.10       1215       1091       2222        547
8.1        354        484        17          1996
8.2        1418       1708       1607        1361
8.3        1354       1469       1624        204
8.4        1505       1614       1264        982
8.5        514        547        601         1243
8.6        445        431        790         2283
8.7        129        174        1584        1600
8.8        205        272        1062        2094
8.9        1099       894        1578        944
8.10       1359       250        564         385
9.1        297        497        1437        2320
9.2        1673       1347       375         1378
9.3        1473       1217       1753        1668
9.4        1371       1755       36          1834
9.5        490        541        1330        1109
9.6        667        382        1293        68
9.7        121        178        1427        2252
9.8        158        270        1061        1643
9.9        913        1094       1599        82
9.10       1480       1562       170         1188
10.1       336        139        212         456
10.2       1533       816        102         586
10.3       1184       808        1942        859
10.4       1777       1728       899         286
10.5       586        495        1977        642
10.6       442        459        1604        1499
10.7       222        197        1508        2219
10.8       153        317        283         1454
10.9       911        907        1897        428
10.10      1319       2021       1439        1657

 ;
 table dd(p,j)          due date in period p    of product j
     1          2           3         4        5         6          7         8         9       10
1   513703     1320109   731903    929186    189375    267089    609606    373968    782053    1078584
2   2729752    2013780   1693086   1377681   2466058   1213482   1862185   2302854   1648684   1783608
3   4122625    3677230   2101290   2350010   3194352   2464410   2481076   3310386   3954355   2871402
4   5070685    4400677   2818992   2882261   4746299   2598978   3108893   3692670   4941749   4082514
5   5233346    5869589   3264018   3514923   5372423   3727797   3996871   5095098   6111764   4870566
6   6372523    6830303   4467860   4524121   7198852   4022120   5007489   6111738   6265739   5696694
7   7349798    8706309   5395597   5419504   7601692   4773397   5695694   6437952   7980817   6955602
8   8908730    9481566   6221460   6700523   9774971   5747058   6190848   7674276   10113596  7216518
9   10436717   10885379  7059272   7175143   11235849  6435950   7740019   8517708   11512449  8123076
10  11593602   12563505  7904514   8774301   12278027  7415628   8328751   9452262   11904327  9174180

;
                                       
table   d_xx(i,ip)                                  
    1       2       3       4       5       6       7       8       9       10
1   0       228389  0       154175  243391  243391  30820   243391  137264  128500
2   228389  0       228389  146850  236066  236066  225809  236066  115587  99889
3   0       228389  0       154175  243391  243391  30820   243391  137264  128500
4   154175  146850  154175  0       161852  161852  123355  161852  55725   46961
5   243391  236066  243391  161852  0       0       240811  0       120479  136177
6   243391  236066  243391  161852  0       0       240811  0       120479  136177
7   30820   225809  30820   123355  240811  240811  0       240811  134684  125920
8   243391  236066  243391  161852  0       0       240811  0       120479  136177
9   137264  115587  137264  55725   120479  120479  134684  120479  0       30050
10  128500  99889   128500  46961   136177  136177  125920  136177  30050   0
                                        
;                                       
                                        
table   d_yy(j,jp)                                  
    1       2       3       4       5       6       7       8       9       10
1   0       186029  187226  37186   133487  88015   129311  128309  32664   186804
2   186029  0       46167   195107  244362  198890  240186  87888   192571  297679
3   187226  46167   0       196304  245559  200087  241383  68379   193768  298876
4   37186   195107  196304  0       142565  97093   138389  137387  27702   195882
5   133487  244362  245559  142565  0       121810  35562   186642  140029  77855
6   88015   198890  200087  97093   121810  0       115152  141170  94557   199665
7   129311  240186  241383  138389  35562   115152  0       182466  135853  84513
8   128309  87888   68379   137387  186642  141170  182466  0       134851  239959
9   32664   192571  193768  27702   140029  94557   135853  134851  0       193346
10  186804  297679  298876  195882  77855   199665  84513   239959  193346  0
                                       
;                                       
                                       
                                      

table   rc_yy(j,jp)                                                                     
    1       2       3       4       5       6       7       8       9       10
1   0       380     3960    3060    180     4180    3200    2380    630     1960
2   340     0       3060    3740    630     2470    3360    2380    160     1820
3   2520    2880    0       2730    2380    200     3800    2340    2210    3060
4   2720    2550    4620    0       2400    3740    800     3230    2400    2890
5   210     540     3400    3200    0       3060    2400    2600    800     2080
6   3800    2470    190     3960    3780    0       4620    3040    3060    2470
7   2400    3520    3400    900     2100    3570    0       2560    2100    2720
8   2520    3080    2520    3570    2730    3040    2560    0       2730    380
9   450     180     2550    3360    560     2340    2400    2860    0       2860
10  2800    1960    3420    3400    2860    2850    2400    340     2470    0

;


table a_sim(i,j) simplified incidence matrix                                       
    1   2   3   4   5   6   7   8   9   10
1   0   0   0   0   1   0   1   0   0   1
2   1   0   0   1   0   0   0   0   1   0
3   0   0   0   0   1   0   1   0   0   1
4   0   0   0   0   0   1   0   0   0   0
5   0   1   1   0   0   0   0   1   0   0
6   0   1   1   0   0   0   0   1   0   0
7   0   0   0   0   1   1   1   0   0   1
8   0   1   1   0   0   0   0   1   0   0
9   0   0   1   0   0   0   0   0   1   0
10  1   0   0   0   0   0   0   0   0   0

;

 table a_max_top_Z(b,j)
        1           2           3           4           5           6           7           8           9           10 
1       1           1           1           1           1           1           1           1           1           1
2       272         354         393         329         374         347         522         470         280         394
3       543         707         785         657         747         693         1043        939         559         787
4       814         1060        1177        985         1120        1039        1564        1408        838         1180
5       1085        1413        1569        1313        1493        1385        2085        1877        1117        1573
6       1356        1766        1961        1641        1866        1731        2606        2346        1396        1966
7       1626        2118        2352        1968        2238        2076        3126        2814        1674        2358
8       1897        2471        2744        2296        2611        2422        3647        3283        1953        2751
9       2168        2824        3136        2624        2984        2768        4168        3752        2232        3144
10      2439        3177        3528        2952        3357        3114        4689        4221        2511        3537
11      2710        3530        3920        3280        3730        3460        5210        4690        2790        3930

;

 table fa_max_top_Z(b,j)
        1           2           3           4           5           6           7           8           9           10 
1       1           1           1           1           1           1           1           1           1           1
2       73930       125245      154370      108175      139801      120340      272380      220806      78344       155157
3       294632      499566      615911      431386      557710      479972      1087432     881345      312257      619054
4       662108      1122964     1384623     969634      1253728     1078898     2445158     1981619     701741      1391692
5       1176357     1995439     2460506     1722919     2227855     1917117     4345557     3521628     1246796     2473071
6       1837380     3116990     3843560     2691240     3480090     2994630     6788630     5501370     1947420     3863190
7       2645177     4487619     5533786     3874599     5010435     4311437     9774377     7920847     2803615     5562051
8       3599747     6107324     7531182     5272994     6818888     5867537     13302797    10780059    3815381     7569652
9       4701091     7976106     9835750     6886426     8905450     7662931     17373891    14079005    4982717     9885994
10      5949209     10093964    12447490    8714894     11270120    9697619     21987659    17817685    6305623     12511076
11      7344100     12460900    15366400    10758400    13912900    11971600    27144100    21996100    7784100     15444900

;


variables  X(i,k)           decision variable
           Y(j,k)           decision variable
           Z(i,j,l)         decision variable
           W(p,j,jp,k)      decision variable           
       
           
           XX(i,ip,k)       dummy variable linearize (X(i.k)*X(ip.k))
           YY(j,jp,k)       dummy variable linearize (Y(j.k)*Y(jp.k))
           XY(i,j,k)        dummy variable linearize (X(i.k)*Y(j.k))
           f1xv             grouping variable XX
           f1yv             grouping variable YY
           f1xyv            grouping variable aXY
           f1v              grouping cost variable
           
           abs_t(i,j,l)     dummy variable linearize abs(top(i.j)-tc(j)*Z(i.j)))
           f2v              workload balancing cost variable
           
           Zm(i,j,l)        binary variable to identify the maximun number of workplaces by product
           Zm_z(i,j,l)      dummy variable linearize (Zm(i.j)*Z(i.j))
           max_Z(i,j)       maximun number of workplaces by product
           maxz_xy(i,j,k)   dummy variable linearize max_Z(i.j)*XY(i.j.k)
           maxz_f3(i,k)     maximun number of workplaces by cell
           f3v              workplaces cost variable

           t_bal(i,j,l)     Balanced time top(i.j.l) divided Z(i.j.l)
           max_top(j)       maximun balanced time by product
           max_top_Y(j,k)   Dummy variable linearize max_top(j)*Y(j.k)           
           dv_tbal(i,j,l)   Dummy variable linearize t_bal(i.j.l))*Z(i.j.l)
           tcell(k)         Makespan by cell 
           f4v              Lateness cost variable

           f5v              Reconfigurability cost variable
           
           f                objective variable ;
           
 binary variable X,Y,Zm,W, XX, YY, XY;
 Integer variable Z,Zm_z,max_Z,maxz_f3;
 Positive variable f1xv,f1yv,f1xyv,f1v,f2v,f3v,f4v,f5v,max_top,abs_t,max_top_Y;

 equations objf             objective function
 
           Constraint_X     constraint grouping cost
           Constraint_Y     constraint grouping cost
           Constraint_xy    constraint grouping cost           
           f1x              grouping equation XX
           f1y              grouping equation YY
           f1xy             grouping equation aXY
           dvxx1            constraint to linearize  x*x
           dvxx2            constraint to linearize  x*x
           dvxx3            constraint to linearize  x*x
           dvyy1            constraint to linearize  y*y
           dvyy2            constraint to linearize  y*y
           dvyy3            constraint to linearize  y*y
           dvxy1            constraint to linearize  x*y
           dvxy2            constraint to linearize  x*y
           dvxy3            constraint to linearize  x*y           
           f1               grouping cost equation 
           
           dvabs_t1         constraint to linearize  abs_t
           dvabs_t2         constraint to linearize  abs_t           
           f2               workload balancing equation cost equation

           dvZm_z1          Constraint to linearize  Zm*Z
           dvZm_z2          Constraint to linearize  Zm*Z
           dvZm_z3          Constraint to linearize  Zm*Z           
           f3z              Constraints for definition of a maximum number of each workplace by product
           Constraint_Zm2   Constraints for definition of a maximum number of each workplace by product           
           dvmz_xy1         Constraint to linearize  maxz*xy
           dvmz_xy2         Constraint to linearize  maxz*xy
           dvmz_xy3         Constraint to linearize  maxz*xy
           dvmz_xk5         Constraints for definition of a maximum number of each workplace by cell           
           f3               Workplaces cost or investment cost equation

           f4top1           Constraint for definition of a maximum balanced time by product 
           f4top2           Constraint for definition of a maximum balanced time by product 
           f4top3           Constraint for definition of a maximum balanced time by product 
           Constraint_w2    Constraints for scheduling problem 
           Constraint_w3    Constraints for scheduling problem 
           Constraint_w4    Constraints for scheduling problem 
           Constraint_w5    Constraints for scheduling problem 
           dvmax_top_Y1     Constraint for definition of a maximum balanced time by product 
           dvmax_top_Y2     Constraint for definition of a maximum balanced time by product 
           dvmax_top_Y3     Constraint for definition of a maximum balanced time by product 
           Constraint_ts1   Makespan equation
           f4               Makespan cost equation
          
           f5               Reconfigurability cost equation
 ;

*-------------------------------------------------------------------------------- 
*equations for grouping cost objective f1
*-------------------------------------------------------------------------------- 

*Constraints for cell formation problem
 Constraint_X(i)      ..    sum(k, X(i,k)) =g= 1;
 Constraint_Y(j)      ..    sum(k, Y(j,k)) =e= 1;
 Constraint_xy(i,j)  ..   sum(k, XY(i,j,k)) =g= a_sim(i,j);
 
*equations for cell formation problem
 dvxx1(i,ip,k).. XX(i,ip,k)=l=X(i,k);
 dvxx2(i,ip,k).. XX(i,ip,k)=l=X(ip,k);
 dvxx3(i,ip,k).. XX(i,ip,k)=g=X(i,k)+X(ip,k)-1;
 
 f1x  ..  f1xv  =e= sum((k,i,ip),XX(i,ip,k)*d_xx(i,ip));
 
 dvyy1(j,jp,k).. YY(j,jp,k)=l=Y(j,k);
 dvyy2(j,jp,k).. YY(j,jp,k)=l=Y(jp,k);
 dvyy3(j,jp,k).. YY(j,jp,k)=g=Y(j,k)+Y(jp,k)-1;
 
 f1y  ..  f1yv  =e= sum((k,j,jp),YY(j,jp,k)*d_yy(j,jp));
 
 dvxy1(i,j,k).. XY(i,j,k)=l=X(i,k);
 dvxy2(i,j,k).. XY(i,j,k)=l=Y(j,k);
 dvxy3(i,j,k).. XY(i,j,k)=g=X(i,k)+Y(j,k)-1;
 f1xy ..  f1xyv =e= sum((i,j,l),a(i,j,l)*(1 - sum(k,XY(i,j,k)))*sum(p,R(p,j,l)));
 
 f1   ..  f1v   =e= Cg*(f1xv + f1yv + f1xyv);
 
*-------------------------------------------------------------------------------- 
*equations for workload balancing cost objective f2
*-------------------------------------------------------------------------------- 

*Constraints for linerize |top(i,j,l)-tc(j)*Z(i,j,l)|  
 dvabs_t1(i,j,l) .. a(i,j,l)*(top(i,j,l)-tc(j)*Z(i,j,l)) - abs_t(i,j,l) =l= 0;
 dvabs_t2(i,j,l) .. -a(i,j,l)*(top(i,j,l)-tc(j)*Z(i,j,l)) - abs_t(i,j,l) =l= 0;

  f2  ..  f2v    =e= Cwb*sum((l,i,j,p),a(i,j,l)*R(p,j,l)*abs_t(i,j,l));
*-------------------------------------------------------------------------------- 
*equation for workplaces cost or investment cost objective f3
*-------------------------------------------------------------------------------- 

*Constraints for linerize the product Zm(i,j,l)*Z(i,j,l)
 dvZm_z1(i,j,l).. Zm_z(i,j,l) - Z(i,j,l)=l= 0;
 dvZm_z2(i,j,l).. Zm_z(i,j,l) - zmax*Zm(i,j,l)=l= 0;
 dvZm_z3(i,j,l).. Zm_z(i,j,l) - Z(i,j,l) - zmax*(Zm(i,j,l)-1)=g= 0;
 
*Constraints for definition of a maximum number of each workplace by product
 f3z(i,j)$a_sim(i,j)  ..   max_Z(i,j) - sum(l,Zm_z(i,j,l)*a(i,j,l))  =g= 0;  
 Constraint_Zm2(i,j,l)  ..    max_Z(i,j)*a(i,j,l) - Z(i,j,l) =g= 0;
 
*Constraints for linerize the product max_Z(i,j)*XY(i,j,k)
 dvmz_xy1(i,j,k) .. maxz_xy(i,j,k) - max_Z(i,j) =l= 0;
 dvmz_xy2(i,j,k) .. maxz_xy(i,j,k) - zmax * XY(i,j,k) =l= 0;
 dvmz_xy3(i,j,k) .. maxz_xy(i,j,k) - max_Z(i,j) - zmax * (XY(i,j,k) -1) =g= 0;
 
*Constraints for definition of a maximum number of each workplace by cell
 dvmz_xk5(i,j,k) ..  maxz_f3(i,k) - maxz_xy(i,j,k)  =g= 0;
 
 f3  ..  f3v    =e= sum((i,k),maxz_f3(i,k)*c(i));
 
*-------------------------------------------------------------------------------- 
*equations for makespan cost objective f4
*-------------------------------------------------------------------------------- 

*Constraints for linerize the product max_top(j)*Z(i,j,l)  
 f4top1(i,j,l)$ a(i,j,l)     ..    dv_tbal(i,j,l)*Z(i,j,l) =e=  a(i,j,l) ;
 f4top2(i,j,l)$ a(i,j,l)     ..    t_bal(i,j,l) =e=  top(i,j,l)* dv_tbal(i,j,l);  
 f4top3(i,j,l)$ a(i,j,l)     ..    max_top(j) =g= t_bal(i,j,l);  

*Constraints for scheduling problem 
 Constraint_w2(p,j,jp,k)..    W(p,j,jp,k) + W(p,jp,j,k) - YY(j,jp,k) =l= 0;
 Constraint_w3(k,p)..         sum(j,Y(j,k)) - sum((j,jp),W(p,j,jp,k)) =l= 1;
 Constraint_w4(j,k,p)..       sum(jp,W(p,j,jp,k)) =l= 1;
 Constraint_w5(jp,k,p)..      sum(j,W(p,j,jp,k)) =l= 1;

*Constraints for linerize the product max_top(j)*Y(j,k)
 dvmax_top_Y1(j,k).. max_top_Y(j,k)  - max_top(j) =l= 0;
 dvmax_top_Y2(j,k).. max_top_Y(j,k) - Y(j,k)*top_max(j) =l= 0;
 dvmax_top_Y3(j,k).. max_top_Y(j,k) - max_top(j)-(Y(j,k)-1)*top_max(j) =g= 0;


Constraint_ts1(k) .. tcell(k) =e=  sum((p,j),sum(l,R(p,j,l)*max_top_Y(j,k))) ;

f4(k)  ..  f4v    =g= Cm*tcell(k);
*-------------------------------------------------------------------------------- 
*equation for reconfigurability cost objective f5
*--------------------------------------------------------------------------------  

 f5  ..  f5v    =e= sum((p,j,jp,k),W(p,j,jp,k)*rc_yy(j,jp));
 
*///////////////////////////////////////////////////////////////
*initial values to some variables
max_top.l(j)=top_max(j);
Z.l(i,j,l)=zmax * a(i,j,l);
*///////////////////////////////////////////////////////////////

 objf.. f =e= alfa1*f1v + alfa2*f2v + alfa3*f3v + alfa4*f4v + alfa5*f5v;
 
 MODEL RCRA_case_study remanufacturing /ALL/;
 SOLVE RCRA_case_study using MINLP minimizing f;

 display f1v.l, f2v.l, f3v.l, f4v.l, f5v.l, f.l, alfa1, alfa2, alfa3, alfa4, alfa5 ;


